type Notes @aws_iam @aws_cognito_user_pools {
  id: ID!
  title: String
  text: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  owner: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelNotesConnection @aws_iam @aws_cognito_user_pools {
  items: [Notes]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelNotesFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  text: ModelStringInput
  and: [ModelNotesFilterInput]
  or: [ModelNotesFilterInput]
  not: ModelNotesFilterInput
  _deleted: ModelBooleanInput
}

type Query {
  getNotes(id: ID!): Notes @aws_iam @aws_cognito_user_pools
  listNotes(filter: ModelNotesFilterInput, limit: Int, nextToken: String): ModelNotesConnection @aws_iam @aws_cognito_user_pools
  syncNotes(filter: ModelNotesFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelNotesConnection @aws_iam @aws_cognito_user_pools
}

input ModelNotesConditionInput {
  title: ModelStringInput
  text: ModelStringInput
  and: [ModelNotesConditionInput]
  or: [ModelNotesConditionInput]
  not: ModelNotesConditionInput
  _deleted: ModelBooleanInput
}

input CreateNotesInput {
  id: ID
  title: String
  text: String
  _version: Int
}

input UpdateNotesInput {
  id: ID!
  title: String
  text: String
  _version: Int
}

input DeleteNotesInput {
  id: ID!
  _version: Int
}

type Mutation {
  createNotes(input: CreateNotesInput!, condition: ModelNotesConditionInput): Notes @aws_iam @aws_cognito_user_pools
  updateNotes(input: UpdateNotesInput!, condition: ModelNotesConditionInput): Notes @aws_iam @aws_cognito_user_pools
  deleteNotes(input: DeleteNotesInput!, condition: ModelNotesConditionInput): Notes @aws_iam @aws_cognito_user_pools
}

input ModelSubscriptionNotesFilterInput {
  id: ModelSubscriptionIDInput
  title: ModelSubscriptionStringInput
  text: ModelSubscriptionStringInput
  and: [ModelSubscriptionNotesFilterInput]
  or: [ModelSubscriptionNotesFilterInput]
  _deleted: ModelBooleanInput
}

type Subscription {
  onCreateNotes(filter: ModelSubscriptionNotesFilterInput, owner: String): Notes @aws_subscribe(mutations: ["createNotes"]) @aws_iam @aws_cognito_user_pools
  onUpdateNotes(filter: ModelSubscriptionNotesFilterInput, owner: String): Notes @aws_subscribe(mutations: ["updateNotes"]) @aws_iam @aws_cognito_user_pools
  onDeleteNotes(filter: ModelSubscriptionNotesFilterInput, owner: String): Notes @aws_subscribe(mutations: ["deleteNotes"]) @aws_iam @aws_cognito_user_pools
}
